{"version":3,"sources":["Card.jsx","cards/AboutMe.jsx","HomePage.jsx","index.jsx"],"names":["Card","props","children","title","divRef","className","ref","AboutMe","cardRef","Link","onClick","linkRef","href","HomePage","useState","currentScreen","setCurrentScreen","triggerElementPos","useRef","changeScreenTo","event","destination","preventDefault","current","target","getBoundingClientRect","profileWrapperRef","lastProfileWrapperPosition","useLayoutEffect","currentPosition","lastXPosition","left","lastYPosition","top","deltaXPosition","deltaYPosition","animate","transform","duration","easing","renderedCard","lastXPos","lastYPos","lastWidth","width","lastHeight","height","deltaX","deltaY","deltaWidth","deltaHeight","src","alt","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2LAAe,SAASA,EAAKC,GAAQ,IACzBC,EAA4BD,EAA5BC,SAAUC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OAEzB,OACI,sBAAKC,UAAU,OAAOC,IAAKF,EAA3B,UACI,6BAAKD,IACL,qBAAKE,UAAU,iBACdH,KCLE,SAASK,EAAQN,GAC5B,OACI,cAACD,EAAD,CAAMG,MAAM,gBAAgBC,OAAQH,EAAMO,QAA1C,gBCAR,SAASC,EAAKR,GAAO,IAETC,EAA+BD,EAA/BC,SAAUQ,EAAqBT,EAArBS,QAASC,EAAYV,EAAZU,QAE3B,OACI,oBAAGC,KAAK,KAAKP,UAAU,YAAYK,QAASA,EAASJ,IAAKK,EAA1D,UACKT,EADL,aAMO,SAASW,IAAY,IAAD,EACWC,mBAAS,GADpB,mBACxBC,EADwB,KACTC,EADS,KAGzBC,EAAoBC,mBAE1B,SAASC,EAAeC,EAAOC,GAC3BD,EAAME,iBACNL,EAAkBM,QAAUH,EAAMI,OAAOC,wBACzCT,EAAiBK,GAcrB,IAAMK,EAAoBR,mBACpBS,EAA6BT,mBAEnCU,2BAAgB,WACZ,IAAMC,EAAkBH,EAAkBH,QAAQE,wBAElD,GAAIE,EAA2BJ,QAAS,CACpC,IAAMO,EAAgBH,EAA2BJ,QAAQQ,KACnDC,EAAgBL,EAA2BJ,QAAQU,IAKnDC,EAAiBJ,EAHED,EAAgBE,KAInCI,EAAiBH,EAHEH,EAAgBI,IAKzCP,EAAkBH,QAAQa,QAAQ,CAC9B,CAAEC,UAAU,cAAD,OAAgBH,EAAhB,0BAAgDC,EAAhD,QACX,CAAEE,UAAU,oBACb,CACCC,SAAU,IACVC,OAAQ,SAIhBZ,EAA2BJ,QAAUM,IACtC,CAACd,IAEJ,IAEIyB,EAFEhC,EAAUU,mBAGhB,OAAQH,GACJ,KAAK,EACDyB,EACI,mCACI,cAAC/B,EAAD,CAAMC,QAAS,SAASU,GAASD,EAAeC,EAAO,IAAOT,QAASH,EAAvE,wBAGR,MAEJ,KAAK,EACDgC,EAAe,cAACjC,EAAD,CAASC,QAASA,IACjC,MAEJ,QACIgC,EAAe,KAsCvB,OAlCAZ,2BAAgB,WACZ,GAAsB,IAAlBb,EAAqB,CAAC,IAAD,EAMjBE,EAAkBM,QAJZkB,EAFW,EAEjBV,KACKW,EAHY,EAGjBT,IACOU,EAJU,EAIjBC,MACQC,EALS,EAKjBC,OALiB,EAajBtC,EAAQe,QAAQE,wBAEdsB,EAASN,EAfM,EASjBV,KAOEiB,EAASN,EAhBM,EAUjBT,IAOEgB,EAAaN,EAjBE,EAWjBC,MAOEM,EAAcL,EAlBC,EAYjBC,OAWJtC,EAAQe,QAAQa,QAAQ,CACpB,CAAEC,UAAU,aAAD,OAAeU,EAAf,eAA4BC,EAA5B,qBAA+CC,EAA/C,aAA8DC,EAA9D,MACX,CAAEb,UAAW,SACd,CACCC,SAAU,IACVC,OAAQ,YAGjB,CAACxB,IAGA,qBAAKV,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oCACuB,IAAlBU,GACG,mBAAGH,KAAK,KAAKF,QA7FjC,SAAsBU,GAClBD,EAAeC,EAAO,IA4FN,4BAEJ,sBAAKf,UAAU,kBAAkBC,IAAKoB,EAAtC,UACI,qBAAKyB,IAAI,qCAAqCC,IAAI,SAAS/C,UAAU,eACrE,2CACA,gEAGR,qBAAKA,UAAU,iBACf,kCACKmC,SCjIrB,IAAMa,EAAcC,SAASC,eAAe,QAE5CC,IAASC,OAAO,cAAC5C,EAAD,IAAcwC,I","file":"static/js/main.64e763b6.chunk.js","sourcesContent":["export default function Card(props) {\n    const { children, title, divRef } = props;\n\n    return (\n        <div className=\"card\" ref={divRef}>\n            <h1>{title}</h1>\n            <div className=\"divider-line\" />\n            {children}\n        </div>\n    )\n}","import Card from \"../Card\";\n\nexport default function AboutMe(props) {\n    return (\n        <Card title=\"Hello, world!\" divRef={props.cardRef}>yo</Card>\n    );\n}","import { useLayoutEffect, useRef, useState } from \"react\";\n\nimport AboutMe from \"./cards/AboutMe\";\n\nfunction Link(props) {\n    // Contoh penerapan \"object destructuring\" di JavaScript\n    const { children, onClick, linkRef } = props;\n\n    return (\n        <a href=\"#0\" className=\"card link\" onClick={onClick} ref={linkRef}>\n            {children} &rarr;\n        </a>\n    );\n}\n\nexport default function HomePage() {\n    const [currentScreen, setCurrentScreen] = useState(0);\n    \n    const triggerElementPos = useRef();\n\n    function changeScreenTo(event, destination) {\n        event.preventDefault();\n        triggerElementPos.current = event.target.getBoundingClientRect();\n        setCurrentScreen(destination);\n    }\n\n    // function renderCurrentScreen() {\n    //     switch (currentScreen) {\n    //         case 0:\n    //     }\n    // }\n\n    function goBackToHome(event) {\n        changeScreenTo(event, 0);\n    }\n\n    // const currentScreenRef = useRef();\n    const profileWrapperRef = useRef();\n    const lastProfileWrapperPosition = useRef();\n\n    useLayoutEffect(function () {\n        const currentPosition = profileWrapperRef.current.getBoundingClientRect();\n\n        if (lastProfileWrapperPosition.current) {\n            const lastXPosition = lastProfileWrapperPosition.current.left;\n            const lastYPosition = lastProfileWrapperPosition.current.top;\n\n            const currentXPosition = currentPosition.left;\n            const currentYPosition = currentPosition.top;\n\n            const deltaXPosition = lastXPosition - currentXPosition;\n            const deltaYPosition = lastYPosition - currentYPosition;\n\n            profileWrapperRef.current.animate([\n                { transform: `translateX(${deltaXPosition}px) translateY(${deltaYPosition}px)` },\n                { transform: `translate(0, 0)` }\n            ], {\n                duration: 500,\n                easing: \"ease\"\n            })\n        }\n\n        lastProfileWrapperPosition.current = currentPosition;\n    }, [currentScreen]);\n\n    const cardRef = useRef();\n\n    let renderedCard;\n    switch (currentScreen) {\n        case 0:\n            renderedCard = (\n                <>\n                    <Link onClick={function(event) { changeScreenTo(event, 1); }} linkRef={cardRef}>About me</Link>\n                </>\n            );\n            break;\n\n        case 1:\n            renderedCard = <AboutMe cardRef={cardRef} />;\n            break;\n\n        default:\n            renderedCard = null;\n            break;\n    }\n\n    useLayoutEffect(function () {\n        if (currentScreen !== 0) {\n            const {\n                left: lastXPos,\n                top: lastYPos,\n                width: lastWidth,\n                height: lastHeight\n            } = triggerElementPos.current;\n\n            const {\n                left: currentXPos,\n                top: currentYPos,\n                width: currentWidth,\n                height: currentHeight\n            } = cardRef.current.getBoundingClientRect();\n\n            const deltaX = lastXPos - currentXPos;\n            const deltaY = lastYPos - currentYPos;\n            const deltaWidth = lastWidth / currentWidth;\n            const deltaHeight = lastHeight / currentHeight;\n\n            // console.log(lastWidth, currentWidth, triggerElement.current);\n            // console.log(triggerElement.current.getBoundingClientRect())\n\n            cardRef.current.animate([\n                { transform: `translate(${deltaX}px, ${deltaY}px) scale(${deltaWidth}, ${deltaHeight})`},\n                { transform: \"none\" }\n            ], {\n                duration: 500,\n                easing: \"ease\"\n            })\n        }\n    }, [currentScreen]);\n\n    return (\n        <div className=\"page\">\n            <div className=\"container\">\n                <section>\n                    {currentScreen !== 0 && (\n                        <a href=\"#0\" onClick={goBackToHome}>&larr; Kembali</a>\n                    )}\n                    <div className=\"profile-wrapper\" ref={profileWrapperRef}>\n                        <img src=\"https://source.unsplash.com/random\" alt=\"Avatar\" className=\"avatar-img\" />\n                        <h1>Nama Kamu</h1>\n                        <p>Deskripsi apa pun di sini</p>\n                    </div>\n                </section>\n                <div className=\"divider-line\" />\n                <section>\n                    {renderedCard}\n                </section>\n            </div>\n        </div>\n    );\n}","import ReactDOM from \"react-dom\";\n\nimport \"./base.css\";\nimport \"./styles.css\";\n\nimport HomePage from \"./HomePage\";\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(<HomePage />, rootElement);"],"sourceRoot":""}